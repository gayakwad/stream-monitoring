version: '3'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: "prom/prometheus"
    volumes:
      - ./conf/batch_job_rules.yml:/etc/prometheus/batch_job_rules.yml
      - ./conf/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    links:
      - push-gateway:push-gateway
      - alertmanager:alertmanager
      - spark-app:spark-app
      - cadvisor:cadvisor

  push-gateway:
    image: "prom/pushgateway"
    ports:
      - "9091:9091"

  alertmanager:
    image: "prom/alertmanager"
    ports:
      - "9093:9093"
    volumes:
      - ./conf/alertmanager.yml:/etc/alertmanager/config.yml
      - ./conf/slack_alert.tmpl:/etc/alertmanager/templates/slack_alert.tmpl

  spark-app:
    image: "p7hb/docker-spark"
    ports:
      - "4040:4040"
      - "8081:8081"
      - "9999:9999"
    volumes:
      - ./target/scala-2.11/stream-monitoring-assembly-0.0.1.jar:/opt/stream-monitoring-assembly-0.0.1.jar
      - ./lib/jmx_prometheus_javaagent-0.10.jar:/opt/jmx_prometheus_javaagent-0.10.jar
      - ./conf/metrics.properties:/opt/metrics.properties
      - ./conf/prometheus-config.yml:/opt/prometheus-config.yml
      - ./conf/run-streaming-app.sh:/opt/run-streaming-app.sh
    entrypoint: ["/opt/run-streaming-app.sh"]

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    links:
      - prometheus:prometheus

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
